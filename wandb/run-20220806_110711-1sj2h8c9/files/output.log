
Downloading: "https://github.com/pytorch/vision/archive/v0.6.0.zip" to C:\Users\Andrea/.cache\torch\hub\v0.6.0.zip
Downloading: "https://download.pytorch.org/models/resnet18-f37072fd.pth" to C:\Users\Andrea/.cache\torch\hub\checkpoints\resnet18-f37072fd.pth









100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 44.7M/44.7M [00:18<00:00, 2.49MB/s]
Epoch: 0 Iteration: 1 Loss: tensor(2.8827) Training accuracy: tensor(0.0531)
Epoch: 0 Iteration: 2 Loss: tensor(2.3289) Training accuracy: tensor(0.2188)
Epoch: 0 Iteration: 3 Loss: tensor(1.9491) Training accuracy: tensor(0.5875)
Epoch: 0 Iteration: 4 Loss: tensor(1.5916) Training accuracy: tensor(0.7500)
Epoch: 0 Iteration: 5 Loss: tensor(1.3610) Training accuracy: tensor(0.8531)
Epoch: 0 Iteration: 6 Loss: tensor(0.9479) Training accuracy: tensor(0.8813)
Epoch: 0 Iteration: 7 Loss: tensor(1.3249) Training accuracy: tensor(0.8188)
Epoch: 0 Iteration: 8 Loss: tensor(1.5059) Training accuracy: tensor(0.8062)
Epoch: 0 Iteration: 9 Loss: tensor(1.3767) Training accuracy: tensor(0.8125)
Epoch: 0 Iteration: 10 Loss: tensor(1.2407) Training accuracy: tensor(0.8219)
Epoch: 0 Iteration: 11 Loss: tensor(1.0177) Training accuracy: tensor(0.8562)
Epoch: 0 Iteration: 12 Loss: tensor(1.0338) Training accuracy: tensor(0.8656)
Epoch: 0 Iteration: 13 Loss: tensor(1.3238) Training accuracy: tensor(0.8313)
Epoch: 0 Iteration: 14 Loss: tensor(0.8548) Training accuracy: tensor(0.8813)
Epoch: 0 Iteration: 15 Loss: tensor(0.9456) Training accuracy: tensor(0.8594)
Epoch: 0 Iteration: 16 Loss: tensor(1.0839) Training accuracy: tensor(0.8375)
Epoch: 0 Iteration: 17 Loss: tensor(1.1113) Training accuracy: tensor(0.8406)
Epoch: 0 Iteration: 18 Loss: tensor(0.9738) Training accuracy: tensor(0.8562)
Epoch: 0 Iteration: 19 Loss: tensor(0.9577) Training accuracy: tensor(0.8281)
Epoch: 0 Iteration: 20 Loss: tensor(1.0125) Training accuracy: tensor(0.8313)
Epoch: 0 Iteration: 21 Loss: tensor(0.8116) Training accuracy: tensor(0.8344)
Epoch: 0 Iteration: 22 Loss: tensor(0.5764) Training accuracy: tensor(0.8906)
Epoch: 0 Iteration: 23 Loss: tensor(0.7249) Training accuracy: tensor(0.8500)
Epoch: 0 Iteration: 24 Loss: tensor(0.7673) Training accuracy: tensor(0.8438)
Epoch: 0 Iteration: 25 Loss: tensor(0.5253) Training accuracy: tensor(0.9031)
Epoch: 0 Iteration: 26 Loss: tensor(0.6954) Training accuracy: tensor(0.8906)
Epoch: 0 Iteration: 27 Loss: tensor(0.6860) Training accuracy: tensor(0.8750)
Epoch: 0 Iteration: 28 Loss: tensor(0.7951) Training accuracy: tensor(0.8219)
Epoch: 0 Iteration: 29 Loss: tensor(0.5732) Training accuracy: tensor(0.8781)
Epoch: 0 Iteration: 30 Loss: tensor(0.6058) Training accuracy: tensor(0.8844)
Epoch: 0 Iteration: 31 Loss: tensor(0.5317) Training accuracy: tensor(0.9094)
Epoch: 0 Iteration: 32 Loss: tensor(0.6559) Training accuracy: tensor(0.8469)
Epoch: 0 Iteration: 33 Loss: tensor(0.6140) Training accuracy: tensor(0.8813)
Epoch: 0 Iteration: 34 Loss: tensor(0.5300) Training accuracy: tensor(0.8844)
Epoch: 0 Iteration: 35 Loss: tensor(0.5039) Training accuracy: tensor(0.8875)
Epoch: 0 Iteration: 36 Loss: tensor(0.5534) Training accuracy: tensor(0.8781)
Epoch: 0 Iteration: 37 Loss: tensor(0.3397) Training accuracy: tensor(0.9156)
Epoch: 0 Iteration: 38 Loss: tensor(0.4791) Training accuracy: tensor(0.8875)
Epoch: 0 Iteration: 39 Loss: tensor(0.3761) Training accuracy: tensor(0.9312)
Epoch: 0 Iteration: 40 Loss: tensor(0.4306) Training accuracy: tensor(0.8844)
Epoch: 0 Iteration: 41 Loss: tensor(0.4189) Training accuracy: tensor(0.8938)
Epoch: 0 Iteration: 42 Loss: tensor(0.3347) Training accuracy: tensor(0.9250)
Epoch: 0 Iteration: 43 Loss: tensor(0.5387) Training accuracy: tensor(0.8469)
Epoch: 0 Iteration: 44 Loss: tensor(0.4053) Training accuracy: tensor(0.8844)
Epoch: 0 Iteration: 45 Loss: tensor(0.4717) Training accuracy: tensor(0.8938)
Epoch: 0 Iteration: 46 Loss: tensor(0.4552) Training accuracy: tensor(0.8750)
Epoch: 0 Iteration: 47 Loss: tensor(0.3709) Training accuracy: tensor(0.9031)
Epoch: 0 Iteration: 48 Loss: tensor(0.4310) Training accuracy: tensor(0.8969)
Epoch: 0 Iteration: 49 Loss: tensor(0.3674) Training accuracy: tensor(0.8938)
Epoch: 0 Iteration: 50 Loss: tensor(0.3423) Training accuracy: tensor(0.8906)
Epoch: 0 Iteration: 51 Loss: tensor(0.2909) Training accuracy: tensor(0.9312)
Epoch: 0 Iteration: 52 Loss: tensor(0.3295) Training accuracy: tensor(0.9219)
Epoch: 0 Iteration: 53 Loss: tensor(0.3139) Training accuracy: tensor(0.9125)
Epoch: 0 Iteration: 54 Loss: tensor(0.5636) Training accuracy: tensor(0.8531)
Epoch: 0 Iteration: 55 Loss: tensor(0.3574) Training accuracy: tensor(0.9125)
Epoch: 0 Iteration: 56 Loss: tensor(0.3834) Training accuracy: tensor(0.8875)
Epoch: 0 Iteration: 57 Loss: tensor(0.2426) Training accuracy: tensor(0.9281)
Epoch: 0 Iteration: 58 Loss: tensor(0.2829) Training accuracy: tensor(0.9281)
Epoch: 0 Iteration: 59 Loss: tensor(0.2674) Training accuracy: tensor(0.9406)
Epoch: 0 Iteration: 60 Loss: tensor(0.3148) Training accuracy: tensor(0.9125)
Epoch: 0 Iteration: 61 Loss: tensor(0.3195) Training accuracy: tensor(0.9219)
Epoch: 0 Iteration: 62 Loss: tensor(0.3586) Training accuracy: tensor(0.9062)
Epoch: 0 Iteration: 63 Loss: tensor(0.2665) Training accuracy: tensor(0.9219)
Epoch: 0 Iteration: 64 Loss: tensor(0.3158) Training accuracy: tensor(0.9156)
Epoch: 0 Iteration: 65 Loss: tensor(0.2665) Training accuracy: tensor(0.9312)
Epoch: 0 Iteration: 66 Loss: tensor(0.2653) Training accuracy: tensor(0.9281)
Epoch: 0 Iteration: 67 Loss: tensor(0.3715) Training accuracy: tensor(0.8969)
Epoch: 0 Iteration: 68 Loss: tensor(0.3008) Training accuracy: tensor(0.9219)
Epoch: 0 Iteration: 69 Loss: tensor(0.3083) Training accuracy: tensor(0.9156)
Epoch: 0 Iteration: 70 Loss: tensor(0.3108) Training accuracy: tensor(0.9094)
Epoch: 0 Iteration: 71 Loss: tensor(0.3460) Training accuracy: tensor(0.9000)
Epoch: 0 Iteration: 72 Loss: tensor(0.3914) Training accuracy: tensor(0.9000)
Epoch: 0 Iteration: 73 Loss: tensor(0.4452) Training accuracy: tensor(0.8687)
Epoch: 0 Iteration: 74 Loss: tensor(0.2472) Training accuracy: tensor(0.9625)
Epoch: 0 Iteration: 75 Loss: tensor(0.2975) Training accuracy: tensor(0.9125)
Epoch: 0 Iteration: 76 Loss: tensor(0.2501) Training accuracy: tensor(0.9375)
Epoch: 0 Iteration: 77 Loss: tensor(0.2378) Training accuracy: tensor(0.9438)
Epoch: 0 Iteration: 78 Loss: tensor(0.3455) Training accuracy: tensor(0.9125)
Epoch: 0 Iteration: 79 Loss: tensor(0.2748) Training accuracy: tensor(0.9250)
Epoch: 0 Iteration: 80 Loss: tensor(0.2924) Training accuracy: tensor(0.9281)
Epoch: 0 Iteration: 81 Loss: tensor(0.2422) Training accuracy: tensor(0.9375)
Epoch: 0 Iteration: 82 Loss: tensor(0.2005) Training accuracy: tensor(0.9531)
Epoch: 0 Iteration: 83 Loss: tensor(0.3106) Training accuracy: tensor(0.9187)
Epoch: 0 Iteration: 84 Loss: tensor(0.1931) Training accuracy: tensor(0.9656)
Epoch: 0 Iteration: 85 Loss: tensor(0.3152) Training accuracy: tensor(0.9094)
Epoch: 0 Iteration: 86 Loss: tensor(0.2105) Training accuracy: tensor(0.9375)
Epoch: 0 Iteration: 87 Loss: tensor(0.2184) Training accuracy: tensor(0.9469)
Epoch: 0 Iteration: 88 Loss: tensor(0.2883) Training accuracy: tensor(0.9438)
Epoch: 0 Iteration: 89 Loss: tensor(0.1968) Training accuracy: tensor(0.9500)
Epoch: 0 Iteration: 90 Loss: tensor(0.3261) Training accuracy: tensor(0.8969)
Epoch: 0 Iteration: 91 Loss: tensor(0.2888) Training accuracy: tensor(0.9312)
Epoch: 0 Iteration: 92 Loss: tensor(0.1707) Training accuracy: tensor(0.9500)
Traceback (most recent call last):
  File "c:\Users\Andrea\Desktop\VisionAndPerceptionProject\trainer.py", line 111, in <module>
    trainer.train()
  File "c:\Users\Andrea\Desktop\VisionAndPerceptionProject\trainer.py", line 42, in train
    output=self.model(patches)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torchvision\models\resnet.py", line 283, in forward
    return self._forward_impl(x)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torchvision\models\resnet.py", line 273, in _forward_impl
    x = self.layer3(x)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\container.py", line 141, in forward
    input = module(input)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torchvision\models\resnet.py", line 94, in forward
    out = self.conv2(out)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\conv.py", line 447, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\Andrea\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\nn\modules\conv.py", line 443, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
